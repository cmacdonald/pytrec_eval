#follows https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
name: Publish Python üêç Windows wheel distribution üì¶ to PyPI and TestPyPI

on: 
  workflow_dispatch:
    inputs:
      releasetype:
        description: "Is this a 'release' or a 'test'?" 
        required: true
        default: 'test'

jobs:
  # build-n-publish-windows:
  #   name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI (Windows)
  #   strategy:
  #     matrix:
  #       python-version: [3.6, 3.7, 3.8, 3.9]
  #       os: ['windows-latest']
  #       architecture: ['x64']

  #   runs-on: ${{ matrix.os }}
  #   steps:
  #   - name: Display phase
  #     run: echo "Deploying "${{github.event.inputs.releasetype}}" $INPUT_RELEASETYPE to PyPI"

  #   - uses: actions/checkout@master

  #   - name: Set up Python ${{ matrix.python-version }}
  #     uses: actions/setup-python@v1
  #     with:
  #       python-version: ${{ matrix.python-version }}

  #   - name: Install Python dependencies
  #     run: |
  #       python -m pip install --upgrade pip wheel setuptools twine
  #       pip install -r requirements.txt

  #   - name: Build a test wheel
  #     if: github.event.inputs.releasetype == 'test'
  #     run: |
  #       $Env:PYTRECEVAL_NAME_SUFFIX = "-craigm"
  #       $DateTime = Get-Date -format yyyyMMddHmm
  #       $Env:PYTRECEVAL_VERSION_SUFFIX = ".$DateTime"
  #       python setup.py bdist_wheel
  #       dir dist/*

  #   - name: Build a release wheel
  #     if: github.event.inputs.releasetype == 'release'
  #     run: python setup.py bdist_wheel

  #   # Upload to TestPyPI
  #   - name: Upload to TestPyPI
  #     if: github.event.inputs.releasetype == 'test'
  #     run: |
  #       python3 -m twine upload --verbose dist/*
  #     env:
  #       TWINE_USERNAME:  __token__
  #       TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
  #       TWINE_REPOSITORY: testpypi
 
  #   - name: Upload to PyPI
  #     if: github.event.inputs.releasetype == 'release'
  #     run: |
  #       python3 -m twine upload --verbose dist/*
  #     env:
  #       TWINE_USERNAME:  __token__
  #       TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  #       TWINE_REPOSITORY: testpypi

  build-n-publish-manylinux:
    name: Build and publish Python üêç distributions üì¶ to PyPI and TestPyPI (manylinux)
    runs-on: ubuntu-latest
    steps:
    - name: Display phase
      run: echo "Deploying "${{github.event.inputs.releasetype}}" $INPUT_RELEASETYPE to PyPI"

    - uses: actions/checkout@master

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools twine cibuildwheel==1.7.4
        pip install -r requirements.txt

    - name: Build manylinux wheels
      env:
        CIBW_SKIP: "cp27-* pp27-*"  # skip Python 2.7 wheels
      run: |
        python -m cibuildwheel --output-dir wheelhouse

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: "wheelhouse"
        path: "wheelhouse"

    # # Upload to TestPyPI
    # - name: Upload to TestPyPI
    #   if: github.event.inputs.releasetype == 'test'
    #   run: |
    #     python3 -m twine upload --verbose dist/*
    #   env:
    #     TWINE_USERNAME:  __token__
    #     TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
    #     TWINE_REPOSITORY: testpypi
 
    # - name: Upload to PyPI
    #   if: github.event.inputs.releasetype == 'release'
    #   run: |
    #     python3 -m twine upload --verbose dist/*
    #   env:
    #     TWINE_USERNAME:  __token__
    #     TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    #     TWINE_REPOSITORY: testpypi
